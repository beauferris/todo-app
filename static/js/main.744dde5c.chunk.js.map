{"version":3,"sources":["components/Task.js","components/NewTask.js","components/Stats.js","App.js","reportWebVitals.js","index.js"],"names":["Task","props","className","type","id","value","checked","onChange","click","htmlFor","content","onClick","NewTask","useState","setId","complete","key","task","setTask","onSubmit","event","preventDefault","addNewTask","prevState","required","placeholder","target","Stats","count","filter","clear","App","setCount","setFilter","useEffect","getCount","tasks","setTasks","filteredTasks","length","checkHandler","newTodos","checkedTask","find","index","indexOf","deleteTask","console","log","taskList","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.744dde5c.chunk.js","sourcesContent":["import \"./Task.css\"\n\nfunction Task(props){\n    return(<div className=\"task\">\n        <div className=\"content\">\n\n       \n        <input type=\"checkbox\" \n            id={props.id}\n            value={props.id} \n            checked={props.checked}\n            onChange={props.click}></input>\n            \n        <label htmlFor={props.id}> {props.content}</label><br></br>\n        </div>\n        <button className=\"delete\" value={props.id} onClick={props.onClick}>X</button>\n\n    </div>)\n}\n\nexport default Task;\n\n","import './NewTask.css';\n\nimport {React, useState} from 'react';\n\nfunction NewTask(props){\n\n\n    const [id, setId] = useState(2)\n    \n    const [task, setTask] = useState({\n        complete:false, \n        key:id,\n        content:\"\"\n    });\n\n    const getTask =(event)=> {\n        setTask(prevState=> {\n            return{ ...prevState,\n                content:event.target.value}\n        })\n    }\n\n    const submitTask =(event)=>{\n        event.preventDefault()\n        props.addNewTask(task);\n    \n        setTask({\n            complete:false, \n            key:id+1,\n            content:\"\"});\n\n        setId(prevState=> prevState+1)\n    }\n\n    return(\n        <form onSubmit={submitTask}>\n           <button type=\"submit\">+</button>\n           <input required placeholder='Create a new todo...'\n                  onChange={getTask} \n                  value={task.content}/>\n                  \n        </form>\n    )\n}\n\nexport default NewTask;","import \"./Stats.css\"\n\nfunction Stats(props){\n    return(<div className=\"stats\">\n        <span className=\"count\">{props.count} items left</span>\n\n        <div className=\"filter\">\n            <button className = {props.filter === \"All\" ? \"active\":\"\"} onClick={props.onClick} value=\"All\">All</button>\n            <button className = {props.filter === \"Active\" ? \"active\":\"\"} onClick={props.onClick} value=\"Active\">Active</button>\n            <button className = {props.filter === \"Completed\" ? \"active\":\"\"} onClick={props.onClick} value=\"Completed\">Completed</button>\n        </div>\n       \n        <button className = {props.filter === \"Clear\" ? \"active\":\"clear\"} onClick={props.clear} value=\"Clear\">Clear Completed</button>\n    </div>)\n}\n\nexport default Stats;\n\n","import './App.css';\nimport Task from './components/Task';\nimport NewTask from './components/NewTask';\nimport { useState, useEffect } from 'react';\n\nimport Stats from './components/Stats';\n\n\nfunction App() {\n  const [count, setCount] = useState(2);\n  const [filter, setFilter] = useState(\"All\");\n\n  useEffect(() => {\n   getCount()\n  });\n\n  const [tasks, setTasks] = useState([{\n    key:0,\n    content:\"Complete online Javascript course\",\n    complete:true\n  },\n  {\n    key:1,\n    content: \"Jog around the park 3x\",\n    complete:false\n  },\n  {\n    key:3,\n    content: \"10 minutes meditation\",\n    complete:false\n  },\n  {\n    key:4,\n    content: \"Read for 1 hour\",\n    complete:false\n  },\n  {\n    key:5,\n    content: \"Pick up groceries\",\n    complete:false\n  },{\n    key:6,\n    content: \"Complete Todo App on Frontend Mentor\",\n    complete:false\n  }\n  \n\n\n\n  ]);\n\n\n  const changeFilter =(event)=>{\n    setFilter(event.target.value);\n  }\n\n  let filteredTasks = (filter === \"Active\"? tasks.filter(task=>task.complete===false)\n    :filter === \"Completed\" ? tasks.filter(task=>task.complete===true): tasks)\n\n  const getCount =()=> {\n    const filteredTasks = tasks.filter(task=>task.complete===false)\n     setCount(filteredTasks.length);\n  }\n\n  const addTask = (task) =>{\n    setTasks([task,...tasks])\n  }\n\n  const checkHandler =(event)=>{   \n    const newTodos = [...tasks]\n    const checkedTask = newTodos.find((task,index) =>task.key===+event.target.value)\n    const index = (newTodos.indexOf(checkedTask))\n    newTodos[index].complete = !newTodos[index].complete;\n    setTasks(newTodos)\n  }\n  \n\n  const clearCompleted = () =>{\n    const newTodos = tasks.filter(task => task.complete === false)\n    setTasks(newTodos)\n  }\n\n\n  const deleteTask = (event) =>{\n    const newTodos = tasks.filter(task=> task.key !== +event.target.value);\n    console.log(event.target.value)\n    setTasks(newTodos) \n  }\n\n\n  const taskList = filteredTasks.map(task => {\n    return(<Task \n      key = {task.key}\n      id={task.key}\n      content={task.content} \n      checked={task.complete}\n      click={checkHandler}\n      onClick={deleteTask}></Task>)\n  }\n  );\n\n\n  return (\n    <div className=\"App\">\n      <h2>TODO</h2>\n      <div className =\"app\">\n      <NewTask  addNewTask={addTask}></NewTask>\n      <div className='tasks'>\n        {taskList}\n      </div>\n      <Stats filter = {filter} onClick={changeFilter} clear ={clearCompleted} count={count}></Stats>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}